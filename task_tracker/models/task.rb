# frozen_string_literal: true

class Task < Sequel::Model
  STATUSES = %w[open closed].freeze

  many_to_one :account, primary_key: :public_id, key: :assignee_public_id

  def self.shuffle_all_open
    random_employee_public_id =
      Account
      .random_employees
      .limit(1)
      .select(:public_id)
      .order(Sequel.lit("random() + tasks.id")) # force re-execution of a subquery
    where(status: "open")
      .returning(:public_id, :assignee_public_id)
      .update(assignee_public_id: random_employee_public_id)
  end

  def close
    update(status: "closed")
  end
end

# Table: tasks
# Columns:
#  id                 | integer     | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  description        | text        | NOT NULL DEFAULT ''::text
#  status             | task_status | NOT NULL DEFAULT 'open'::task_status
#  assignee_public_id | uuid        | NOT NULL
#  public_id          | uuid        | NOT NULL DEFAULT gen_random_uuid()
# Indexes:
#  tasks_pkey          | PRIMARY KEY btree (id)
#  tasks_public_id_key | UNIQUE btree (public_id)
