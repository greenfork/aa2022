* Actor, command, query, event
** Task tracker

- Таск-трекер должен быть отдельным дашбордом и доступен всем сотрудникам
  компании UberPopug Inc.

  + Actor: Employee
  + Command: -
  + Query: Tasks
  + Event: -

- Авторизация в таск-трекере должна выполняться через общий сервис авторизации
  UberPopug Inc (у нас там инновационная система авторизации на основе формы
  клюва).

  + Actor: Auth service
  + Command: Authorize
  + Query: User
  + Event: ???

- В таск-трекере должны быть только задачи. Проектов, скоупов и спринтов нет,
  потому что они не умещаются в голове попуга.

  + Actor: -
  + Command: -
  + Query: Tasks
  + Event: -
  
- Новые таски может создавать кто угодно (администратор, начальник, разработчик,
  менеджер и любая другая роль). У задачи должны быть описание, статус
  (выполнена или нет) и попуг, на которого заассайнена задача.

  + Actor: Employee
  + Command: Add task
  + Query: -
  + Event: Task added
  
- Менеджеры или администраторы должны иметь кнопку «заассайнить задачи», которая
  возьмёт все открытые задачи и рандомно заассайнит каждую на любого из
  сотрудников (кроме менеджера и администратора) . Не успел закрыть задачу до
  реассайна — сорян, делай следующую.

  + Actor: Manager, Admin
  + Command: Shuffle tasks
  + Query: Tasks
  + Event: Tasks shuffled
  
- a) Ассайнить задачу можно на кого угодно (кроме менеджера и администратора), это
может быть любой существующий аккаунт из системы.

  + Actor: Employee
  + Command: -
  + Query: Task
  + Event: -

- b) Ассайнить задачу можно только кнопкой «заассайнить задачи»

  + Actor: Manager, Admin
  + Command: Shuffle tasks
  + Query: Tasks
  + Event: Tasks.Shuffled


- c) При нажатии кнопки «заассайнить задачи» все текущие не закрытые задачи должны
быть случайным образом перетасованы между каждым аккаунтом в системе

  + Actor: -
  + Command: -
  + Query: -
  + Event: -

- d) Мы не заморачиваемся на ограничение по нажатию на кнопку «заассайнить
задачи». Её можно нажимать хоть каждую секунду.

  + Actor: -
  + Command: -
  + Query: -
  + Event: -

- e) На одного сотрудника может выпасть любое количество новых задач, может
выпасть ноль, а может и 10.

  + Actor: -
  + Command: -
  + Query: -
  + Event: -

- f) Создать задачу не заасайненую на пользователя нельзя. Т.е. любая задача
должна иметь попуга, который ее делает

  + Actor: Task.Created
  + Command: Assign task
  + Query: Task
  + Event: Task.Assigned

- Каждый сотрудник должен иметь возможность видеть в отдельном месте список заассайненных на него задач + отметить задачу выполненной.

  + Actor: Employee
  + Command: Close task
  + Query: Task
  + Event: Task closed

** Accounting

- Аккаунтинг должен быть в отдельном дашборде и доступным только для
  администраторов и бухгалтеров.
  
  + Actor: Accountant, Admin
  + Command: -
  + Query: Accounting log
  + Event: -

- a) у обычных попугов доступ к аккаунтингу тоже должен быть. Но только к
  информации о собственных счетах (аудит лог + текущий баланс). У админов и
  бухгалтеров должен быть доступ к общей статистике по деньгами заработанным
  (количество заработанных топ-менеджментом за сегодня денег + статистика по
  дням).

  + Actor: Employee
  + Command: -
  + Query: Accounting log
  + Event: -

- Авторизация в дешборде аккаунтинга должна выполняться через общий сервис
  аутентификации UberPopug Inc.
  
  + Actor: Auth service
  + Command: Authorize
  + Query: User
  + Event: ???

- У каждого из сотрудников должен быть свой счёт, который показывает, сколько за
  сегодня он получил денег. У счёта должен быть аудитлог того, за что были
  списаны или начислены деньги, с подробным описанием каждой из задач.
  
  + Actor: Task closed
  + Command: Record transaction
  + Query: Accounting log
  + Event: Transaction recorded

- Расценки:
  + цены на задачу определяется единоразово, в момент появления в системе (можно
    с минимальной задержкой)
  + цены рассчитываются без привязки к сотруднику
  + формула, которая говорит сколько списать денег с сотрудника при ассайне
    задачи — rand(-10..-20)$
  + формула, которая говорит сколько начислить денег сотруднику для выполненой
    задачи — rand(20..40)$
  + деньги списываются сразу после ассайна на сотрудника, а начисляются после
    выполнения задачи.
  + отрицательный баланс переносится на следующий день. Единственный способ его
    погасить - закрыть достаточное количество задач в течение дня.
    
  + Actor: -
  + Command: -
  + Query: -
  + Event: -

- Дешборд должен выводить количество заработанных топ-менеджментом за сегодня
  денег.  a) т.е. сумма всех закрытых и заасайненых задач за день с
  противоположным знаком: (sum(completed task amount) + sum(assigned task
  fee)) * -1
  
  + Actor: -
  + Command: -
  + Query: Accounting log
  + Event: -

- В конце дня необходимо:
  
- a) считать сколько денег сотрудник получил за рабочий день

  + Actor: Scheduler
  + Command: Record payment transaction
  + Query: Accounting log
  + Event: Transaction recorded

- b) отправлять на почту сумму выплаты.

  + Actor: Transaction recorded (payment)
  + Command: Send email
  + Query: -
  + Event: ???

- После выплаты баланса (в конце дня) он должен обнуляться, и в аудитлоге всех
  операций аккаунтинга должно быть отображено, что была выплачена сумма.
  
  + Actor: Transaction recorded (payment)
  + Command: Pay daily salary
  + Query: -
  + Event: Salary paid

- Дашборд должен выводить информацию по дням, а не за весь период сразу.  a)
  вообще хватит только за сегодня (всё равно попуги дальше не помнят), но если
  чувствуете, что успеете сделать аналитику за каждый день недели — будет круто

  + Actor: Employee
  + Command: -
  + Query: Accounting log
  + Event: -

** Analytics

- Аналитика — это отдельный дашборд, доступный только админам.

  + Actor: Admin
  + Command: -
  + Query: Accounting log, Employees
  + Event: -
  
- Нужно указывать, сколько заработал топ-менеджмент за сегодня и сколько попугов
  ушло в минус.
  
  + Actor: Admin
  + Command: -
  + Query: Accounting log, Managers
  + Event: -

- Нужно показывать самую дорогую задачу за день, неделю или месяц.
  
  + Actor: Admin
  + Command: -
  + Query: Accounting log
  + Event: -
